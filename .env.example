# AI PRD Builder Vapor Server Configuration
# Copy this file to .env and configure according to your setup

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================

# Server host and port
HOST=0.0.0.0
PORT=8080

# Application environment (development, testing, production)
ENVIRONMENT=development
APP_VERSION=1.0.0

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# Database type: postgresql, supabase, mongodb
DATABASE_TYPE=postgresql

# PostgreSQL Configuration (when DATABASE_TYPE=postgresql)
DATABASE_HOST=localhost
DATABASE_PORT=5432
DATABASE_USERNAME=vapor
DATABASE_PASSWORD=password
DATABASE_NAME=ai_prd_builder

# Alternative: Full PostgreSQL URL
# DATABASE_URL=postgres://vapor:password@localhost:5432/ai_prd_builder

# Supabase Configuration (when DATABASE_TYPE=supabase)
SUPABASE_URL=https://your-project-id.supabase.co
SUPABASE_ANON_KEY=your-supabase-anon-key
SUPABASE_SERVICE_ROLE_KEY=your-supabase-service-role-key

# MongoDB Configuration (when DATABASE_TYPE=mongodb)
MONGODB_CONNECTION_STRING=mongodb://localhost:27017
MONGODB_DATABASE=ai_prd_builder

# =============================================================================
# AI PROVIDERS CONFIGURATION
# =============================================================================

# Active Provider Selection
# Options: native, ai-orchestrator, anthropic, openai, gemini
# Default: native (uses ai-prd-builder package)
AI_PROVIDER=native

# Anthropic Claude
# Latest: claude-sonnet-4-5-20250929 (Claude Sonnet 4.5)
# Available: claude-3-5-sonnet-20241022, claude-3-opus-20240229, claude-3-haiku-20240307
ANTHROPIC_API_KEY=your-anthropic-api-key
ANTHROPIC_MODEL=claude-sonnet-4-5-20250929

# OpenAI GPT
# Latest: gpt-5-turbo-2025-01-01 (GPT-5 Turbo)
# Available: gpt-4o, gpt-4-turbo, gpt-3.5-turbo
OPENAI_API_KEY=your-openai-api-key
OPENAI_MODEL=gpt-5-turbo-2025-01-01

# Google Gemini
# Latest: gemini-2.5-pro-latest (Gemini 2.5 Pro)
# Available: gemini-2.0-flash-exp, gemini-1.5-pro, gemini-1.5-flash
GEMINI_API_KEY=your-gemini-api-key
GEMINI_MODEL=gemini-2.5-pro-latest

# =============================================================================
# APPLE INTELLIGENCE & AI ORCHESTRATOR
# =============================================================================

# The ai-orchestrator system will automatically detect and use:
# - Apple Intelligence (on-device Foundation Models)
# - Apple Silicon hardware acceleration
# - Vision framework for mockup analysis
# - MLX for local ML processing
#
# No additional configuration required for Apple ecosystem integration

# =============================================================================
# CACHING & PERFORMANCE
# =============================================================================

# Redis Configuration (Optional - for caching and real-time features)
REDIS_URL=redis://localhost:6379

# Request timeout (in seconds)
REQUEST_TIMEOUT=30

# =============================================================================
# LOGGING & MONITORING
# =============================================================================

# Log level: trace, debug, info, notice, warning, error, critical
LOG_LEVEL=info

# Enable metrics collection (true/false)
ENABLE_METRICS=false

# =============================================================================
# GITHUB INTEGRATION
# =============================================================================

# GitHub Personal Access Token (for repository indexing)
# Create at: https://github.com/settings/tokens
# Required scopes: repo (private) or public_repo (public only)
GITHUB_ACCESS_TOKEN=

# GitHub OAuth Configuration (for user authentication)
# Create OAuth App at: https://github.com/settings/developers
GITHUB_OAUTH_CLIENT_ID=
GITHUB_OAUTH_CLIENT_SECRET=
GITHUB_OAUTH_CALLBACK_URL=http://localhost:8080/auth/github/callback

# =============================================================================
# SECURITY
# =============================================================================

# JWT Secret (if implementing authentication)
# JWT_SECRET=your-jwt-secret-key

# CORS allowed origins (comma-separated)
CORS_ALLOWED_ORIGINS=*

# API Rate limiting (requests per hour)
RATE_LIMIT_REQUESTS_PER_HOUR=100

# =============================================================================
# FEATURES FLAGS
# =============================================================================

# Enable interactive clarifications via WebSocket
ENABLE_INTERACTIVE_CLARIFICATIONS=true

# Enable Apple Intelligence provider
ENABLE_APPLE_INTELLIGENCE=true

# Enable provider health monitoring
ENABLE_PROVIDER_MONITORING=true

# Enable real-time status updates
ENABLE_REALTIME_UPDATES=true

# =============================================================================
# EXAMPLE CONFIGURATIONS
# =============================================================================

# Development with PostgreSQL + Apple Intelligence + Anthropic
# DATABASE_TYPE=postgresql
# DATABASE_URL=postgres://vapor:password@localhost:5432/ai_prd_builder_dev
# ANTHROPIC_API_KEY=sk-ant-api03-...
# LOG_LEVEL=debug

# Production with Supabase + Multiple AI Providers
# DATABASE_TYPE=supabase
# SUPABASE_URL=https://abcdef123456.supabase.co
# SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
# ANTHROPIC_API_KEY=sk-ant-api03-...
# OPENAI_API_KEY=sk-...
# LOG_LEVEL=notice
# ENABLE_METRICS=true

# Privacy-focused with MongoDB + Apple Intelligence only
# DATABASE_TYPE=mongodb
# MONGODB_CONNECTION_STRING=mongodb://localhost:27017
# # No external AI provider keys - uses Apple Intelligence exclusively
# LOG_LEVEL=info